import java.util.Scanner;import java.util.*;import java.util.regex.*;public class Kingdom{	private String raw;	private TreeSet<Integer> numerics;	private String name;	private int networth;	private int land;		public String getRaw(){return raw;}		public Kingdom(String input)	{		raw = input;		Scanner s = new Scanner(input);		numerics = new TreeSet();		while(s.hasNext())		{			String next = s.next();			Pattern p = Pattern.compile("(.*)\\[#.+\\]");			Matcher m = p.matcher(input);			if(m.find())				name = m.group(1);			try			{				int intData = new Integer(next.replaceAll(",", ""));				numerics.add(intData);			}			catch(Exception e)			{			}		}		if(numerics.size() == 0 || name == null)		{			throw new NullPointerException("Bad Kingdom data");		}		int size = numerics.size();		int count = 0;		for(Integer i: numerics)		{			if(count == size-1)				networth = i;			if(count == size-2)				land = i;			count++;		}	}		public boolean equals(Object o)	{		Kingdom k = (Kingdom)o;		return k.name.equals(name);	}		public String toString()	{		//INFO name, race, networth, realmnum		//Print networth, name[realmNum], race		return raw;	}		//precondition this.equals(newK)	public int nwChange(Kingdom newK)	{		return newK.networth-networth;	}		//precondition this.equals(newK)	public int ldChange(Kingdom newK)	{		return newK.land-land;	}		public int hashCode()	{		return name.hashCode();	}}